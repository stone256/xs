<?php

?>

<script>
var _token = '<?=$rs['token'];?>';
</script>

<?php include _X_LAYOUT . '/sitemin/include_vue.phtml'; ?>

<div class="container-fluid">
	<div class="row" id="fifthTable">
		<div class="col-sm-12">
			<h3 :class="t_hide">Profile</h3>
			<div >
				<table>
					<tr>
						<th v-for="col in columns" :class="'c--'+col">{{col}}</th>
					</tr>
					<tr v-for="row in get_rows()">
						<td valign="top" v-for="col in columns"  :class="'c--'+col">{{row[col]}}</td>
					</tr>
				</table>
			</div>
		</div>
		<script>
		var fifthTable = new Vue({
			el: '#fifthTable',
			data: {
				quotes: '',
				rows :  $.ajax({
						url: '/sitemin/user/profile?cmd=brief',
						method: 'POST',
						dataType: 'json',
						async: false
					}).responseJSON
				},
			methods: {
				"get_rows": function () {return this.rows; }
			},
			computed: {
				"columns": function columns() {
						if (!this.rows || this.rows.length == 0) return [];
						return Object.keys(this.rows[0])
					},
				"t_hide":function(){
						return (!this.rows || this.rows.length == 0) ? 'Hide' : 'Yes';
					}
			}
		});
		</script>
	</div>

	<div class="row" id="sixthTable">
		<div class="col-lg-6">
			<div  :class="t_hide">
				<h3  >Message Borad</h3>
				<table>
					<tr>
						<!-- <th v-for="col in columns" v-on:click="sortTable(col)" :class="'c--'+col">{{col}}
						<div class="arrow" v-if="col == sortColumn" v-bind:class="[ascending ? 'arrow_up' : 'arrow_down']"></div>
						</th> -->
						<th v-on:click="sortTable('From')">[From]
							<div class="arrow"  v-if=" 'From' == sortColumn" v-bind:class="[ascending ? 'arrow_up' : 'arrow_down']"></div>
						</th>
						<th  v-on:click="sortTable('Message')">
							[Message]
							<div class="arrow"  v-if=" 'Message' == sortColumn" v-bind:class="[ascending ? 'arrow_up' : 'arrow_down']"></div>
						</th>
							<th v-on:click="sortTable('Date')">
							[Date]
							<div class="arrow" v-if="'Date' == sortColumn" v-bind:class="[ascending ? 'arrow_up' : 'arrow_down']"></div>
						</th>
						<th></th>
					</tr>
					<tr v-for="row in get_rows()" >
						<td>{{row.From}}</td>
						<td>{{row.Message}}</td>
						<td>{{row.Date}}</td>
						<!-- <td valign="top"  v-for="col in columns" :class="'view-'+row.viewed + ' c--'+col"><pre>{{row[col]}}</pre> </td> -->
						<td> <a href="javascript:void(0)" v-on:click="message_remove(row.id)"> <i class="fa fa-trash-o" aria-hidden="true"></i></a></td>
					</tr>
				</table>
				<div class="pagination">
					<div class="number" v-for="i in num_pages()" v-bind:class="[i == currentPage ? 'active' : '']" v-on:click="change_page(i)">{{i}}</div>
				</div>
			</div>

		</div>
		<div class="col-lg-3">
			<div >
				<h3>Users : </h3>
				{{users}}
			</div>
		</div>
		<div class="col-lg-3">
			<div >
				<h3>Login in last 24h : </h3>
				{{login24}}
			</div>
		</div>
		<div class="col-lg-4">
	            <div >
	                <h3>top 10 Url in last 24h :</h3>
	                <ul>
	                    <li v-for="url in top10url"> {{url.router}} <span class="badge badge-light">{{url.c}}</span></li>
	                </ul>
	            </div>
	        </div>
		<div class="col-lg-8">
	            <div >
			<script src="/package/jquery/jquery.flot.js" ></script>
	                <h3>top 5 Url:</h3>
			<div class="demo-container">
				<div id="placeholder" class="demo-placeholder" style="float:left; width:675px;height:300px"></div>
				<p id="choices" style="float:right; width:135px;"></p>
			</div>
	            </div>
	        </div>
		<script>
		var sixthTable = new Vue({
			el: '#sixthTable',
			data: {
				currentPage: 1,
				elementsPerPage: 12,
				ascending: false,
				sortColumn: '',
				users :  0,
				login24: 0,
				top10url: [],
				top5url: [],
				rows :  $.ajax({
						url: '/sitemin/user/message?cmd=list',
						method: 'POST',
						dataType: 'json',
						async: false
					}).responseJSON || []
				},
			methods: {
				"sortTable": function (col) {
						if (this.sortColumn === col) {
							this.ascending = !this.ascending;
						} else {
							this.ascending = true;
							this.sortColumn = col;
						}

						var ascending = this.ascending;

						this.rows.sort(function(a, b) {
							if (a[col] > b[col]) {
								return ascending ? 1 : -1
							} else if (a[col] < b[col]) {
								return ascending ? -1 : 1
							}
							return 0;
						})
					},
				"message_remove":	function(id){
						$.ajax({
							url: '/sitemin/user/message?cmd=delete&id='+id,
							success: function(data){ }
						});
					 	var nrows = [];
					 	for(var i in this.rows){
					 		if(this.rows[i].id == id) this.rows.splice(i,1);

					 	}
					},
				"num_pages": function () {
						return Math.ceil(this.rows.length / this.elementsPerPage);
					},
				"get_rows": function () {
						//if(!this.rows || this.rows.length == 0 ) return []
						var start = (this.currentPage-1) * this.elementsPerPage;
						var end = start + this.elementsPerPage;
						return this.rows.slice(start, end);
					},
				"change_page": function (page) {
					this.currentPage = page;
				}
			},
			computed: {
				"columns": function columns() {
					if (!this.rows || this.rows.length == 0) return [];
					return Object.keys(this.rows[0])
				},
				"t_hide":function(){
						return (!this.rows || this.rows.length == 0) ? 'Hide' : 'Yes';
					}
			},
			mounted: function () {
				$.ajax({ url: '/sitemin/status?cmd=users&_token='+_token,
					success: function(ret){
						sixthTable.users = ret;
					}
				});
				$.ajax({ url: '/sitemin/status?cmd=login24&_token='+_token,
					success: function(ret){
						sixthTable.login24 = ret;
					}
				});
				$.ajax({ url: '/sitemin/status?cmd=top10url&_token='+_token, dataType:'json',
					success: function(ret){
						sixthTable.top10url = ret;
					}
				});
				$.ajax({ url: '/sitemin/status?cmd=top5url&_token='+_token, dataType:'json',
					success: function(ret){
						sixthTable.top5url = ret;
					}
				});
		        }
		});

		</script>

	</div>

</div>

<script>

	$(function() {

		var datasets = [
			{
				label: "USA",
				data: [[1988, 483994], [1989, 479060], [1990, 457648], [1991, 401949], [1992, 424705], [1993, 402375], [1994, 377867], [1995, 357382], [1996, 337946], [1997, 336185], [1998, 328611], [1999, 329421], [2000, 342172], [2001, 344932], [2002, 387303], [2003, 440813], [2004, 480451], [2005, 504638], [2006, 528692]]
			},
			{
				label: "Russia",
				data: [[1988, 218000], [1989, 203000], [1990, 171000], [1992, 42500], [1993, 37600], [1994, 36600], [1995, 21700], [1996, 19200], [1997, 21300], [1998, 13600], [1999, 14000], [2000, 19100], [2001, 21300], [2002, 23600], [2003, 25100], [2004, 26100], [2005, 31100], [2006, 34700]]
			},
			{
				label: "UK",
				data: [[1988, 62982], [1989, 62027], [1990, 60696], [1991, 62348], [1992, 58560], [1993, 56393], [1994, 54579], [1995, 50818], [1996, 50554], [1997, 48276], [1998, 47691], [1999, 47529], [2000, 47778], [2001, 48760], [2002, 50949], [2003, 57452], [2004, 60234], [2005, 60076], [2006, 59213]]
			},
			{
				label: "Germany",
				data: [[1988, 55627], [1989, 55475], [1990, 58464], [1991, 55134], [1992, 52436], [1993, 47139], [1994, 43962], [1995, 43238], [1996, 42395], [1997, 40854], [1998, 40993], [1999, 41822], [2000, 41147], [2001, 40474], [2002, 40604], [2003, 40044], [2004, 38816], [2005, 38060], [2006, 36984]]
			},
			{
				label: "Denmark",
				data: [[1988, 3813], [1989, 3719], [1990, 3722], [1991, 3789], [1992, 3720], [1993, 3730], [1994, 3636], [1995, 3598], [1996, 3610], [1997, 3655], [1998, 3695], [1999, 3673], [2000, 3553], [2001, 3774], [2002, 3728], [2003, 3618], [2004, 3638], [2005, 3467], [2006, 3770]]
			},
			{
				label: "Sweden",
				data: [[1988, 6402], [1989, 6474], [1990, 6605], [1991, 6209], [1992, 6035], [1993, 6020], [1994, 6000], [1995, 6018], [1996, 3958], [1997, 5780], [1998, 5954], [1999, 6178], [2000, 6411], [2001, 5993], [2002, 5833], [2003, 5791], [2004, 5450], [2005, 5521], [2006, 5271]]
			},
			{
				label: "Norway",
				data: [[1988, 4382], [1989, 4498], [1990, 4535], [1991, 4398], [1992, 4766], [1993, 4441], [1994, 4670], [1995, 4217], [1996, 4275], [1997, 4203], [1998, 4482], [1999, 4506], [2000, 4358], [2001, 4385], [2002, 5269], [2003, 5066], [2004, 5194], [2005, 4887], [2006, 4891]]
			}
		];
		var i = 0;
		$.each(datasets, function(key, val) {
			val.color = i;
			++i;
		});
		// insert checkboxes
		var choiceContainer = $("#choices");
		$.each(datasets, function(key, val) {
			choiceContainer.append("<br/><input type='checkbox' name='" + key +
				"' checked='checked' id='id" + key + "'></input>" +
				"<label for='id" + key + "'>"
				+ val.label + "</label>");
		});
		choiceContainer.find("input").click(plotAccordingToChoices);
		function plotAccordingToChoices() {
			var data = [];
			choiceContainer.find("input:checked").each(function () {
				var key = $(this).attr("name");
				if (key && datasets[key]) {
					data.push(datasets[key]);
				}
			});
			if (data.length > 0) {
				$.plot("#placeholder", data, {
					yaxis: {
						min: 0
					},
					xaxis: {
						tickDecimals: 0
					}
				});
			}
		}
		plotAccordingToChoices();

	});

</script>
